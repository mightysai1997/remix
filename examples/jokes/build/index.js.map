{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/root.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes[.]rss.tsx", "../app/utils/db.server.ts", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/logout.tsx", "../app/utils/session.server.ts", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/index.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/$jokeId.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/index.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/new.tsx", "route-module:/Users/kentcdodds/code/remix/examples/jokes/app/routes/login.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/kentcdodds/code/remix/examples/jokes/app/entry.server.tsx\";\nimport * as route0 from \"/Users/kentcdodds/code/remix/examples/jokes/app/root.tsx\";\nimport * as route1 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes[.]rss.tsx\";\nimport * as route2 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/logout.tsx\";\nimport * as route3 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/index.tsx\";\nimport * as route4 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes.tsx\";\nimport * as route5 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/$jokeId.tsx\";\nimport * as route6 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/index.tsx\";\nimport * as route7 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/jokes/new.tsx\";\nimport * as route8 from \"/Users/kentcdodds/code/remix/examples/jokes/app/routes/login.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/jokes[.]rss\": {\n    id: \"routes/jokes[.]rss\",\n    parentId: \"root\",\n    path: \"jokes.rss\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/logout\": {\n    id: \"routes/logout\",\n    parentId: \"root\",\n    path: \"logout\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/jokes\": {\n    id: \"routes/jokes\",\n    parentId: \"root\",\n    path: \"jokes\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/jokes/$jokeId\": {\n    id: \"routes/jokes/$jokeId\",\n    parentId: \"routes/jokes\",\n    path: \":jokeId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/jokes/index\": {\n    id: \"routes/jokes/index\",\n    parentId: \"routes/jokes\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/jokes/new\": {\n    id: \"routes/jokes/new\",\n    parentId: \"routes/jokes\",\n    path: \"new\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/login\": {\n    id: \"routes/login\",\n    parentId: \"root\",\n    path: \"login\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route8\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import ReactDOMServer from \"react-dom/server\";\nimport type { EntryContext } from \"remix\";\nimport { RemixServer } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = ReactDOMServer.renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Link, Meta, Links, Scripts, LiveReload, useCatch } from \"remix\";\nimport type { LinksFunction } from \"remix\";\nimport { Outlet } from \"react-router-dom\";\n\nimport globalStylesUrl from \"./styles/global.css\";\nimport globalMediumStylesUrl from \"./styles/global-medium.css\";\nimport globalLargeStylesUrl from \"./styles/global-large.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    {\n      rel: \"stylesheet\",\n      href: globalMediumStylesUrl,\n      media: \"print, (min-width: 640px)\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalLargeStylesUrl,\n      media: \"screen and (min-width: 1024px)\",\n    },\n  ];\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      <Link reloadDocument to=\"/jokes-rss\">\n        RSS\n      </Link>\n    </footer>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  switch (caught.status) {\n    case 401:\n    case 404:\n      return (\n        <Document title={`${caught.status} ${caught.statusText}`}>\n          <h1>\n            {caught.status} {caught.statusText}\n          </h1>\n          <Footer />\n        </Document>\n      );\n\n    default:\n      throw new Error(\n        `Unexpected caught response with status: ${caught.status}`\n      );\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Uh-oh!\">\n      <h1>App Error</h1>\n      <pre>{error.message}</pre>\n      <p>\n        Replace this UI with what you want users to see when your app throws\n        uncaught errors.\n      </p>\n      <Footer />\n    </Document>\n  );\n}\n", "import type { LoaderFunction } from \"remix\";\nimport { db } from \"~/utils/db.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let jokes = await db.joke.findMany({\n    take: 100,\n    orderBy: { createdAt: \"desc\" },\n    include: { jokester: { select: { username: true } } },\n  });\n\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n  if (!host) {\n    throw new Error(\"Could not determine domain URL.\");\n  }\n  const protocol = host.includes(\"localhost\") ? \"http\" : \"https\";\n  let domain = `${protocol}://${host}`;\n  const jokesUrl = `${domain}/jokes`;\n\n  let rssString = `\n    <rss xmlns:blogChannel=\"${jokesUrl}\" version=\"2.0\">\n      <channel>\n        <title>Remix Jokes</title>\n        <link>${jokesUrl}</link>\n        <description>Some funny jokes</description>\n        <language>en-us</language>\n        <generator>Kody the Koala</generator>\n        <ttl>40</ttl>\n        ${jokes\n          .map((joke) =>\n            `\n            <item>\n              <title>${joke.name}</title>\n              <description>A funny joke called ${joke.name}</description>\n              <author>${joke.jokester.username}</author>\n              <pubDate>${joke.createdAt}</pubDate>\n              <link>${jokesUrl}/${joke.id}</link>\n              <guid>${jokesUrl}/${joke.id}</guid>\n            </item>\n          `.trim()\n          )\n          .join(\"\\n\")}\n      </channel>\n    </rss>\n  `.trim();\n\n  return new Response(rssString, {\n    headers: {\n      \"Cache-Control\": `public, max-age=${60 * 10} s-maxage=${60 * 60 * 24}`,\n      \"Content-Type\": \"application/xml\",\n      \"Content-Length\": String(Buffer.byteLength(rssString)),\n    },\n  });\n};\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n  db.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  db = global.__db;\n}\n\nexport { db };\n", "import type { ActionFunction } from \"remix\";\nimport { logout } from \"~/utils/session.server\";\n\nexport let action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n", "import * as bcrypt from \"bcrypt\";\nimport { createCookieSessionStorage, redirect } from \"remix\";\n\nimport { db } from \"./db.server\";\n\nexport type LoginForm = {\n  username: string;\n  password: string;\n};\n\nexport async function register({ username, password }: LoginForm) {\n  let passwordHash = await bcrypt.hash(password, 10);\n  return db.user.create({\n    data: { username, passwordHash },\n  });\n}\n\nexport async function login({ username, password }: LoginForm) {\n  const user = await db.user.findUnique({ where: { username } });\n  if (!user) return null;\n  const isCorrectPassword = await bcrypt.compare(password, user.passwordHash);\n  if (!isCorrectPassword) return null;\n  return user;\n}\n\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set\");\n}\n\nlet { getSession, commitSession, destroySession } = createCookieSessionStorage({\n  cookie: {\n    name: \"RJ_session\",\n    secure: true,\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n});\n\nexport function getUserSession(request: Request) {\n  return getSession(request.headers.get(\"Cookie\"));\n}\n\nexport async function getUserId(request: Request) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") return null;\n  return userId;\n}\n\nexport async function requireUserId(request: Request) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") throw redirect(\"/login\");\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (typeof userId !== \"string\") return null;\n\n  return db.user\n    .findUnique({ where: { id: userId } })\n    .catch(() => Promise.reject(logout(request)));\n}\n\nexport async function requireUser(request: Request) {\n  let session = await getUserSession(request);\n  let userId = session.get(\"userId\");\n  if (!session.has(\"userId\")) throw redirect(\"/login\");\n\n  return db.user\n    .findUnique({ where: { id: userId } })\n    .catch(() => Promise.reject(logout(request)));\n}\n\nexport async function logout(request: Request) {\n  let session = await getSession(request.headers.get(\"Cookie\"));\n  return redirect(\"/login\", {\n    headers: { \"Set-Cookie\": await destroySession(session) },\n  });\n}\n\nexport async function createUserSession(userId: string, redirectTo: string) {\n  let session = await getSession();\n  session.set(\"userId\", userId);\n  return redirect(redirectTo, {\n    headers: { \"Set-Cookie\": await commitSession(session) },\n  });\n}\n", "import { Link } from \"remix\";\nimport type { MetaFunction, LinksFunction, HeadersFunction } from \"remix\";\nimport stylesUrl from \"../styles/index.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Remix: It's funny!\",\n    description: \"Remix jokes app. Learn Remix and laugh at the same time!\",\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport let headers: HeadersFunction = () => {\n  return {\n    \"Cache-Control\": `public, max-age=${60 * 10}, s-maxage=${\n      60 * 60 * 24 * 30\n    }`,\n  };\n};\n\nexport default function Index() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>\n          Remix <span>Jokes!</span>\n        </h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"jokes\">Read Jokes</Link>\n            </li>\n            <li>\n              <Link reloadDocument to=\"/jokes.rss\">\n                RSS\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction, LinksFunction } from \"remix\";\nimport { Form } from \"remix\";\nimport { Outlet, useCatch, useLoaderData, Link, json } from \"remix\";\nimport { db } from \"~/utils/db.server\";\nimport type { User } from \"@prisma/client\";\nimport { getUser } from \"~/utils/session.server\";\nimport stylesUrl from \"../styles/jokes.css\";\n\ninterface LoaderData {\n  user: User | null;\n  jokeListItems: Array<{ id: string; name: string }>;\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let jokeListItems = await db.joke.findMany({\n    take: 5,\n    select: { id: true, name: true },\n  });\n  let user = await getUser(request);\n\n  let data: LoaderData = {\n    jokeListItems,\n    user,\n  };\n\n  return json(data);\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nfunction Footer() {\n  return (\n    <footer className=\"jokes-footer\">\n      <div className=\"container\">\n        <Link reloadDocument to=\"/jokes.rss\">\n          RSS\n        </Link>\n      </div>\n    </footer>\n  );\n}\n\nfunction Header({ user }: { user: User | null }) {\n  return (\n    <header className=\"jokes-header\">\n      <div className=\"container\">\n        <h1 className=\"home-link\">\n          <Link to=\"/\" title=\"Remix Jokes\" aria-label=\"Remix Jokes\">\n            <span className=\"logo\">\uD83E\uDD2A</span>\n            <span className=\"logo-medium\">J\uD83E\uDD2AKES</span>\n          </Link>\n        </h1>\n        {user ? (\n          <div className=\"user-info\">\n            <span>{`Hi ${user.username}`}</span>\n            <Form action=\"/logout\" method=\"post\">\n              <button type=\"submit\" className=\"button\">\n                Logout\n              </button>\n            </Form>\n          </div>\n        ) : (\n          <Link to=\"/login\">Login</Link>\n        )}\n      </div>\n    </header>\n  );\n}\n\nfunction Layout({ children }: React.PropsWithChildren<{}>) {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"jokes-layout\">\n      <Header user={data.user} />\n      <main className=\"jokes-main\">\n        <div className=\"container\">{children}</div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default function JokesScreen() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <Layout>\n      <div className=\"jokes-list\">\n        {data.jokeListItems.length ? (\n          <>\n            <Link to=\".\">Get a random joke</Link>\n            <p>Here are a few more jokes to check out:</p>\n            <ul>\n              {data.jokeListItems.map(({ id, name }) => (\n                <li key={id}>\n                  <Link to={id}>{name}</Link>\n                </li>\n              ))}\n            </ul>\n            <Link to=\"new\" className=\"button\">\n              Add your own\n            </Link>\n          </>\n        ) : null}\n      </div>\n      <div className=\"jokes-outlet\">\n        <Outlet />\n      </div>\n    </Layout>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  switch (caught.status) {\n    case 401:\n    case 404:\n      return (\n        <Layout>\n          <h1>\n            {caught.status}: {caught.statusText}\n          </h1>\n        </Layout>\n      );\n\n    default:\n      throw new Error(\n        `Unexpected caught response with status: ${caught.status}`\n      );\n  }\n}\n", "import type {\n  LoaderFunction,\n  ActionFunction,\n  MetaFunction,\n  HeadersFunction,\n} from \"remix\";\nimport { json, useLoaderData, useCatch, Link, Form, redirect } from \"remix\";\nimport { useParams } from \"react-router-dom\";\nimport type { Joke } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\n\nexport let meta: MetaFunction = ({ data }: { data: LoaderData }) => {\n  return {\n    title: `\"${data.joke.name}\" joke`,\n    description: `Enjoy the \"${data.joke.name}\" joke and much more`,\n  };\n};\n\ntype LoaderData = { joke: Joke; isOwner: boolean };\n\nexport let loader: LoaderFunction = async ({ request, params }) => {\n  let userId = await getUserId(request);\n  let joke = await db.joke.findUnique({ where: { id: params.jokeId } });\n  if (!joke) {\n    throw new Response(\"What a joke! Not found.\", { status: 404 });\n  }\n  let data: LoaderData = { joke, isOwner: userId === joke.jokesterId };\n  return json(data, {\n    headers: {\n      \"Cache-Control\": `private, max-age=${60 * 5}`,\n    },\n  });\n};\n\nexport let headers: HeadersFunction = ({ loaderHeaders }) => {\n  return {\n    \"Cache-Control\": loaderHeaders.get(\"Cache-Control\") ?? \"\",\n  };\n};\n\nexport let action: ActionFunction = async ({ request, params }) => {\n  if (request.method === \"DELETE\") {\n    let userId = await requireUserId(request);\n    let joke = await db.joke.findUnique({ where: { id: params.jokeId } });\n    if (!joke) {\n      throw new Response(\"Can't delete what does not exist\", { status: 404 });\n    }\n    if (joke.jokesterId !== userId) {\n      throw new Response(\"Pssh, nice try. That's not your joke\", {\n        status: 401,\n      });\n    }\n    await db.joke.delete({ where: { id: params.jokeId } });\n    return redirect(\"/jokes\");\n  }\n};\n\nexport default function JokeRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{data.joke.content}</p>\n      <Link to=\".\">{data.joke.name} Permalink</Link>\n      {data.isOwner ? (\n        <Form method=\"delete\">\n          <button type=\"submit\" className=\"button\">\n            Delete\n          </button>\n        </Form>\n      ) : null}\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return <div>Huh? What the heck is {params.jokeId}?</div>;\n    }\n    case 401: {\n      return <div>Sorry, but {params.jokeId} is not your joke.</div>;\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n", "import { useLoaderData, Link, json, useCatch } from \"remix\";\nimport type { Joke } from \"@prisma/client\";\n\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomJoke: Joke };\n\nexport let loader = async () => {\n  const count = await db.joke.count();\n  const randomRowNumber = Math.floor(Math.random() * count);\n  let [randomJoke] = await db.joke.findMany({ take: 1, skip: randomRowNumber });\n  if (!randomJoke) {\n    throw new Response(\"No jokes to be found!\", { status: 404 });\n  }\n  let data: LoaderData = { randomJoke };\n  return json(data);\n};\n\nexport default function JokesIndexRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random joke:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to={data.randomJoke.id}>\"{data.randomJoke.name}\" Permalink</Link>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div>\n          <p>There are no jokes to display.</p>\n          <Link to=\"new\">Add your own</Link>\n        </div>\n      );\n    }\n\n    default: {\n      throw new Error(\n        `Unexpected caught response with status: ${caught.status}`\n      );\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: unknown }) {\n  console.error(error);\n  return <div>I did a whoopsies.</div>;\n}\n", "import type { ActionFunction, LoaderFunction } from \"remix\";\nimport { Link } from \"remix\";\nimport { json, useLoaderData } from \"remix\";\nimport { useActionData, Form, redirect } from \"remix\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\n\nfunction validateJokeContent(content: unknown) {\n  if (typeof content !== \"string\" || content.length < 4) {\n    return `That joke is too short`;\n  }\n}\n\nfunction validateJokeName(name: unknown) {\n  if (typeof name !== \"string\" || name.length < 2) {\n    return `That joke's name is too short`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { name: string | undefined; content: string | undefined };\n  fields?: {\n    name: string;\n    content: string;\n  };\n};\n\ntype LoaderData = { loggedIn: boolean };\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let userId = await getUserId(request);\n  let data: LoaderData = { loggedIn: Boolean(userId) };\n  return json(data);\n};\n\nexport let action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  const userId = await requireUserId(request);\n\n  let { name, content } = Object.fromEntries(await request.formData());\n  if (typeof name !== \"string\" || typeof content !== \"string\") {\n    return { formError: `Form not submitted correctly.` };\n  }\n\n  let fieldErrors = {\n    name: validateJokeName(name),\n    content: validateJokeContent(content),\n  };\n  let fields = { name, content };\n  if (Object.values(fieldErrors).some(Boolean)) return { fieldErrors, fields };\n\n  let joke = await db.joke.create({ data: { ...fields, jokesterId: userId } });\n  return redirect(`/jokes/${joke.id}`);\n};\n\nexport default function JokeScreen() {\n  let data = useLoaderData<LoaderData>();\n  let actionData = useActionData<ActionData | undefined>();\n\n  if (!data.loggedIn) {\n    return (\n      <div>\n        <p>You must be logged in to create a joke.</p>\n        <Link to=\"/login\">Login</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p>Add your own hilarious joke</p>\n      <Form method=\"post\">\n        <div>\n          <label>\n            Name:{\" \"}\n            <input\n              type=\"text\"\n              defaultValue={actionData?.fields?.name}\n              name=\"name\"\n              aria-describedby={\n                actionData?.fieldErrors?.name ? \"name-error\" : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.name ? (\n            <p className=\"form-validation-error\" role=\"alert\" id=\"name-error\">\n              {actionData?.fieldErrors?.name}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <label>\n            Content:{\" \"}\n            <textarea\n              defaultValue={actionData?.fields?.content}\n              name=\"content\"\n            />\n          </label>\n          {actionData?.fieldErrors?.content ? (\n            <p\n              className=\"form-validation-error\"\n              role=\"alert\"\n              id=\"content-error\"\n            >\n              {actionData?.fieldErrors?.content}\n            </p>\n          ) : null}\n        </div>\n        <button type=\"submit\" className=\"button\">\n          Add\n        </button>\n      </Form>\n    </div>\n  );\n}\n", "import type {\n  ActionFunction,\n  HeadersFunction,\n  LinksFunction,\n  MetaFunction,\n} from \"remix\";\nimport { useActionData, Form } from \"remix\";\nimport { login, createUserSession, register } from \"~/utils/session.server\";\nimport { db } from \"~/utils/db.server\";\nimport stylesUrl from \"../styles/login.css\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"Remix Jokes | Login\",\n    description: \"Login to submit your own jokes to Remix Jokes!\",\n  };\n};\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport let headers: HeadersFunction = () => {\n  return {\n    \"Cache-Control\": `public, max-age=${60 * 10}, s-maxage=${\n      60 * 60 * 24 * 30\n    }`,\n  };\n};\n\nfunction validateUsername(username: unknown) {\n  if (typeof username !== \"string\" || username.length < 3) {\n    return `Usernames must be at least 3 characters long`;\n  }\n}\n\nfunction validatePassword(password: unknown) {\n  if (typeof password !== \"string\" || password.length < 6) {\n    return `Passwords must be at least 6 characters long`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: { username: string | undefined; password: string | undefined };\n  fields?: { loginType: string; username: string; password: string };\n};\n\nexport let action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  let { loginType, username, password } = Object.fromEntries(\n    await request.formData()\n  );\n  if (\n    typeof loginType !== \"string\" ||\n    typeof username !== \"string\" ||\n    typeof password !== \"string\"\n  ) {\n    return { formError: `Form not submitted correctly.` };\n  }\n\n  let fields = { loginType, username, password };\n  let fieldErrors = {\n    username: validateUsername(username),\n    password: validatePassword(password),\n  };\n  if (Object.values(fieldErrors).some(Boolean)) return { fieldErrors, fields };\n\n  switch (loginType) {\n    case \"login\": {\n      const user = await login({ username, password });\n      if (!user) {\n        return {\n          fields,\n          formError: `Username/Password combination is incorrect`,\n        };\n      }\n      return createUserSession(user.id, \"/jokes\");\n    }\n    case \"register\": {\n      let userExists = await db.user.findFirst({ where: { username } });\n      if (userExists) {\n        return {\n          fields,\n          formError: `User with username ${username} already exists`,\n        };\n      }\n      const user = await register({ username, password });\n      if (!user) {\n        return {\n          fields,\n          formError: `Something went wrong trying to create a new user.`,\n        };\n      }\n      return createUserSession(user.id, \"/jokes\");\n    }\n    default: {\n      return { fields, formError: `Login type invalid` };\n    }\n  }\n};\n\nexport default function Login() {\n  const actionData = useActionData<ActionData | undefined>();\n  return (\n    <div className=\"container\">\n      <div className=\"content\" data-light=\"\">\n        <h1>Login</h1>\n        <Form\n          method=\"post\"\n          aria-describedby={\n            actionData?.formError ? \"form-error-message\" : undefined\n          }\n        >\n          <fieldset>\n            <legend className=\"sr-only\">Login or Register?</legend>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"login\"\n                defaultChecked={\n                  !actionData?.fields?.loginType ||\n                  actionData?.fields?.loginType === \"login\"\n                }\n              />{\" \"}\n              Login\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"register\"\n                defaultChecked={actionData?.fields?.loginType === \"register\"}\n              />{\" \"}\n              Register\n            </label>\n          </fieldset>\n          <div>\n            <label htmlFor=\"username-input\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username-input\"\n              name=\"username\"\n              defaultValue={actionData?.fields?.username}\n              aria-invalid={!!actionData?.fieldErrors?.username || undefined}\n              aria-describedby={\n                actionData?.fieldErrors?.username ? \"username-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.username ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"username-error\"\n              >\n                {actionData?.fieldErrors.username}\n              </p>\n            ) : null}\n          </div>\n          <div>\n            <label htmlFor=\"password-input\">Password</label>\n            <input\n              id=\"password-input\"\n              name=\"password\"\n              defaultValue={actionData?.fields?.password}\n              type=\"password\"\n              aria-invalid={!!actionData?.fieldErrors?.password || undefined}\n              aria-describedby={\n                actionData?.fieldErrors?.password ? \"password-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.password ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"password-error\"\n              >\n                {actionData?.fieldErrors.password}\n              </p>\n            ) : null}\n          </div>\n          <div id=\"form-error-message\">\n            {actionData?.formError ? (\n              <p className=\"form-validation-error\" role=\"alert\">\n                {actionData?.formError}\n              </p>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
