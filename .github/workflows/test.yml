name: 🧪 Test

on:
  push:
    branches:
      - main
      - dev
      - release-*
    tags-ignore:
      - v*
    paths-ignore:
      - "docs/**"
      - "**/README.md"
  pull_request: {}

jobs:
  build:
    name: ⚙️ Build
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: 🏗 Build
        run: yarn build

  lint:
    name: ⬣ Lint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: yarn lint

  test:
    name: "🧪 Test: ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      - name: 🧪 Run Primary Tests
        run: "yarn test:primary"

  integration:
    name: "👀 Integration Test: ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 📥 Install deps
        # even though this is called "npm-install" it does use yarn to install
        # because we have a yarn.lock and caches efficiently.
        uses: bahmutov/npm-install@v1

      # playwright recommends if you cache the binaries to keep it tied to the version of playwright you are using.
      # https://playwright.dev/docs/ci#caching-browsers
      - name: 🕵️‍♂️ Get current Playwright version
        id: playwright-version
        shell: bash
        run: |
          playwright_version=$(npm info @playwright/test version)
          echo "::set-output name=version::${playwright_version}"

      - name: 🤖 Get Playwright install directory
        id: playwright-install-dir
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
            echo "::set-output name=install-dir::%USERPROFILE%\AppData\Local\ms-playwright"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]
          then
            echo "::set-output name=dir::~/Library/Caches/ms-playwright"
          else
            echo "::set-output name=dir::~/.cache/ms-playwright"
          fi

      - name: 🤖 Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ${{ steps.playwright-install-dir.outputs.dir }}
          key: cache-playwright-${{ steps.playwright-version.outputs.version }}-${{ matrix.os }}

      - name: 🖨️ Playwright info
        shell: bash
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Playwright version: ${{ steps.playwright-version.outputs.version }}"
          echo "Playwright install dir: ${{ steps.playwright-install-dir.outputs.dir }}"
          echo "Cache Hit: ${{ steps.playwright-cache.outputs.cache-hit }}"

      - name: 📥 Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: 👀 Run Integration Tests
        run: "yarn test:integration"
